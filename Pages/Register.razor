@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@page "/register"

@using BlazorConduit.Store.Users.Actions 
@using BlazorConduit.Models.Authentication.Dtos
@using BlazorConduit.Models.Authentication.RequestModels
@using BlazorConduit.Models.Authentication.Validation
@using Fluxor 

@inject IDispatcher Dispatcher

<div class="auth-page">
    <div class="container page">
        <div class="row">

            <div class="col-md-6 offset-md-3 col-xs-12">
                <h1 class="text-xs-center">Sign up</h1>
                <p class="text-xs-center">
                    <a href="">Have an account?</a>
                </p>



                <EditForm Model="validationModel" OnValidSubmit="OnSignUpClicked">
                    <DataAnnotationsValidator />
                    <ul class="error-messages">
                        <li>That email is already taken</li>
                        <ValidationSummary />
                    </ul>

                    <fieldset class="form-group">
                        <InputText class="form-control form-control-lg" placeholder="Your Name" @bind-Value="validationModel.UserName" />
                    </fieldset>
                    <fieldset class="form-group">
                        <InputText class="form-control form-control-lg" placeholder="Email" @bind-Value="validationModel.UserName" />
                    </fieldset>
                    <fieldset class="form-group">
                        <InputText class="form-control form-control-lg" placeholder="Password" type="password" @bind-Value="validationModel.Password" />
                    </fieldset>
                    <button type="submit" class="btn btn-lg btn-primary pull-xs-right">
                        Sign up
                    </button>
                </EditForm>
            </div>

        </div>
    </div>
</div>

@code {

    private RegisterUserValidationModel validationModel = new RegisterUserValidationModel();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    private void OnSignUpClicked()
    {
        var registerRequest = new AuthenticationRequestModel(new AuthenticationRequestDto(validationModel.UserName, validationModel.Email!, validationModel.Password!));

        Dispatcher.Dispatch(new RegisterUserAction(registerRequest));
    }

}